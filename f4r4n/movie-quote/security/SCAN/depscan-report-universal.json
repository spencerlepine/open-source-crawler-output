{"id": "CVE-2022-23491", "package": "pkg:pypi/certifi@2020.12.5", "purl": "pkg:pypi/certifi@2020.12.5", "package_type": "certifi_project", "package_usage": "N/A", "version": "2020.12.5", "fix_version": "2022.12.07", "severity": "HIGH", "cvss_score": "7.5", "short_description": "Certifi is a curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store. TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found in the linked google group discussion.", "related_urls": ["https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ", "https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8"]}
{"id": "CVE-2022-29217", "package": "pkg:pypi/pyjwt@1.7.1", "purl": "pkg:pypi/pyjwt@1.7.1", "package_type": "pyjwt_project", "package_usage": "N/A", "version": "1.7.1", "fix_version": "2.4.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.", "related_urls": ["https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24", "https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc", "https://github.com/jpadilla/pyjwt/releases/tag/2.4.0", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6HIYEYZRQEP6QTHT3EHH3RGFYJIHIMAO/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5PK7IQCBVNLYJEFTPHBBPFP72H4WUFNX/"]}
{"id": "CVE-2021-28658", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.8", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "In Django 2.2 before 2.2.20, 3.0 before 3.0.14, and 3.1 before 3.1.8, MultiPartParser allowed directory traversal via uploaded files with suitably crafted file names. Built-in upload handlers were not affected by this vulnerability.", "related_urls": ["https://groups.google.com/g/django-announce/c/ePr5j-ngdPU", "https://www.djangoproject.com/weblog/2021/apr/06/security-releases/", "https://docs.djangoproject.com/en/3.1/releases/security/", "https://lists.debian.org/debian-lts-announce/2021/04/msg00008.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVKYPHR3TKR2ESWXBPOJEKRO2OSJRZUE/", "https://security.netapp.com/advisory/ntap-20210528-0001/"]}
{"id": "CVE-2021-31542", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.9", "severity": "HIGH", "cvss_score": "7.5", "short_description": "In Django 2.2 before 2.2.21, 3.1 before 3.1.9, and 3.2 before 3.2.1, MultiPartParser, UploadedFile, and FieldFile allowed directory traversal via uploaded files with suitably crafted file names.", "related_urls": ["https://www.djangoproject.com/weblog/2021/may/04/security-releases/", "https://docs.djangoproject.com/en/3.2/releases/security/", "http://www.openwall.com/lists/oss-security/2021/05/04/3", "https://groups.google.com/forum/#!forum/django-announce", "https://lists.debian.org/debian-lts-announce/2021/05/msg00005.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVKYPHR3TKR2ESWXBPOJEKRO2OSJRZUE/", "https://security.netapp.com/advisory/ntap-20210618-0001/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"]}
{"id": "CVE-2021-32052", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.10", "severity": "MEDIUM", "cvss_score": "6.1", "short_description": "In Django 2.2 before 2.2.22, 3.1 before 3.1.10, and 3.2 before 3.2.2 (with Python 3.9.5+), URLValidator does not prohibit newlines and tabs (unless the URLField form field is used). If an application uses values with newlines in an HTTP response, header injection can occur. Django itself is unaffected because HttpResponse prohibits newlines in HTTP headers.", "related_urls": ["https://docs.djangoproject.com/en/3.2/releases/security/", "http://www.openwall.com/lists/oss-security/2021/05/06/1", "https://groups.google.com/forum/#!forum/django-announce", "https://www.djangoproject.com/weblog/2021/may/06/security-releases/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVKYPHR3TKR2ESWXBPOJEKRO2OSJRZUE/", "https://security.netapp.com/advisory/ntap-20210611-0002/"]}
{"id": "CVE-2021-32839", "package": "pkg:pypi/sqlparse@0.4.1", "purl": "pkg:pypi/sqlparse@0.4.1", "package_type": "sqlparse_project", "package_usage": "N/A", "version": "0.4.1", "fix_version": "0.4.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "sqlparse is a non-validating SQL parser module for Python. In sqlparse versions 0.4.0 and 0.4.1 there is a regular Expression Denial of Service in sqlparse vulnerability. The regular expression may cause exponential backtracking on strings containing many repetitions of '\\r\\n' in SQL comments. Only the formatting feature that removes comments from SQL statements is affected by this regular expression. As a workaround don't use the sqlformat.format function with keyword strip_comments=True or the --strip-comments command line flag when using the sqlformat command line tool. The issues has been fixed in sqlparse 0.4.2.", "related_urls": ["https://github.com/andialbrecht/sqlparse/commit/8238a9e450ed1524e40cb3a8b0b3c00606903aeb", "https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-p5w8-wqhj-9hhf"]}
{"id": "CVE-2021-33203", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.12", "severity": "MEDIUM", "cvss_score": "4.9", "short_description": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.", "related_urls": ["https://docs.djangoproject.com/en/3.2/releases/security/", "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/", "https://groups.google.com/forum/#!forum/django-announce", "https://security.netapp.com/advisory/ntap-20210727-0004/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"]}
{"id": "CVE-2021-33503", "package": "pkg:pypi/urllib3@1.26.4", "purl": "pkg:pypi/urllib3@1.26.4", "package_type": "python", "package_usage": "N/A", "version": "1.26.4", "fix_version": "1.26.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.", "related_urls": ["https://github.com/advisories/GHSA-q2q7-5pp4-w6pg", "https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMUGWEAUYGGHTPPXT6YBD53WYXQGVV73/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6SCV7ZNAHS3E6PBFLJGENCDRDRWRZZ6W/", "https://security.gentoo.org/glsa/202107-36", "https://www.oracle.com/security-alerts/cpuoct2021.html"]}
{"id": "CVE-2021-33571", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.12", "severity": "HIGH", "cvss_score": "7.5", "short_description": "In Django 2.2 before 2.2.24, 3.x before 3.1.12, and 3.2 before 3.2.4, URLValidator, validate_ipv4_address, and validate_ipv46_address do not prohibit leading zero characters in octal literals. This may allow a bypass of access control that is based on IP addresses. (validate_ipv4_address and validate_ipv46_address are unaffected with Python 3.9.5+..) .", "related_urls": ["https://groups.google.com/g/django-announce/c/sPyjSKMi8Eo", "https://docs.djangoproject.com/en/3.2/releases/security/", "https://www.djangoproject.com/weblog/2021/jun/02/security-releases/", "https://security.netapp.com/advisory/ntap-20210727-0004/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"]}
{"id": "CVE-2021-35042", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.13", "severity": "CRITICAL", "cvss_score": "9.8", "short_description": "Django 3.1.x before 3.1.13 and 3.2.x before 3.2.5 allows QuerySet.order_by SQL injection if order_by is untrusted input from a client of a web application.", "related_urls": ["https://docs.djangoproject.com/en/3.2/releases/security/", "https://www.openwall.com/lists/oss-security/2021/07/02/2", "https://groups.google.com/forum/#!forum/django-announce", "https://www.djangoproject.com/weblog/2021/jul/01/security-releases/", "https://security.netapp.com/advisory/ntap-20210805-0008/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SS6NJTBYWOX6J7G4U3LUOILARJKWPQ5Y/"]}
{"id": "CVE-2021-44420", "package": "pkg:pypi/django@3.1.7", "purl": "pkg:pypi/django@3.1.7", "package_type": "djangoproject", "package_usage": "N/A", "version": "3.1.7", "fix_version": "3.1.14", "severity": "HIGH", "cvss_score": "7.3", "short_description": "In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.", "related_urls": ["https://docs.djangoproject.com/en/3.2/releases/security/", "https://www.openwall.com/lists/oss-security/2021/12/07/1", "https://www.djangoproject.com/weblog/2021/dec/07/security-releases/", "https://groups.google.com/forum/#!forum/django-announce", "https://security.netapp.com/advisory/ntap-20211229-0006/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B4SQG2EAF4WCI2SLRL6XRDJ3RPK3ZRDV/"]}
