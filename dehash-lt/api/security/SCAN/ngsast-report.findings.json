{"findings": [{"app": "open-source-crawler", "type": "extscan", "title": "$databaseData is never referenced or the value is not used.", "description": "$databaseData is never referenced or the value is not used.\n\n## Additional information\n\n**[$databaseData is never referenced or the value is not used](https://psalm.dev/275)**", "internal_id": "UnusedForeachValue/7e5760a1b3b5f52b5d6207c5bb099196", "severity": "moderate", "owasp_category": "", "category": "$databaseData is never referenced or the value is not used", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "$databaseData is never referenced or the value is not used.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/api.php", "DATA_TYPE": "OSS_SCAN", "lineNumber": 17, "ruleId": "UnusedForeachValue", "ruleName": "$databaseData is never referenced or the value is not used", "contextText": "\tforeach($res->databases as $databaseData){\n", "snippetText": "\t\n\tforeach($res->databases as $databaseData){\n\t\t//$dbName = $databaseData->name;\n\t\t$dbName = \"SHA1\";\n"}, "tags": []}, {"app": "open-source-crawler", "type": "extscan", "title": "Unsafe var_dump.", "description": "Unsafe var_dump.\n\n## Additional information\n\n**[Unsafe var dump](https://psalm.dev/002)**", "internal_id": "ForbiddenCode/6495f057b33d1915ed92ab2afca75a60", "severity": "moderate", "owasp_category": "", "category": "Unsafe var dump", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "Unsafe var_dump.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/api.php", "DATA_TYPE": "OSS_SCAN", "lineNumber": 24, "ruleId": "ForbiddenCode", "ruleName": "Unsafe var dump", "contextText": "\t\techo var_dump($res) . \"<br>\";\n", "snippetText": "\t\t$res = current($result->toArray());\n\t\techo var_dump($res) . \"<br>\";\n\t\n\t\t//foreach($res as $collectionData){\n"}, "tags": []}, {"app": "open-source-crawler", "type": "extscan", "title": "Client-side Field Level Encryption allows an application to encrypt specific data fields based on the compliance needs.", "description": "MongoDB is quite insecure by default allowing unauthenticated access for all clients. Configuring both MongoDB server and the client using proper authentication, secure tls and client-side field level encryption would improve security by several fold.\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[PyMongo Authentication](https://pymongo.readthedocs.io/en/stable/examples/authentication.html)**\n\n**[TLS/SSL and PyMongo](https://pymongo.readthedocs.io/en/stable/examples/tls.html)**\n\n**[Field Level Encryption](https://pymongo.readthedocs.io/en/stable/examples/encryption.html)**\n", "internal_id": "pymongo-misconfiguration-insecure/9bf9dfa70c731c7c667ab4ff68163b6d", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "Client-side Field Level Encryption allows an application to encrypt specific data fields based on the compliance needs.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/tools/sanitizer.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 10, "ruleId": "pymongo-misconfiguration-insecure", "ruleName": "Security Misconfiguration", "contextText": "myclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n", "snippetText": "\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n\n\n"}, "tags": []}, {"app": "open-source-crawler", "type": "extscan", "title": "Client-side Field Level Encryption allows an application to encrypt specific data fields based on the compliance needs.", "description": "MongoDB is quite insecure by default allowing unauthenticated access for all clients. Configuring both MongoDB server and the client using proper authentication, secure tls and client-side field level encryption would improve security by several fold.\n\n**[OWASP-A6](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration)**\n\n**[PyMongo Authentication](https://pymongo.readthedocs.io/en/stable/examples/authentication.html)**\n\n**[TLS/SSL and PyMongo](https://pymongo.readthedocs.io/en/stable/examples/tls.html)**\n\n**[Field Level Encryption](https://pymongo.readthedocs.io/en/stable/examples/encryption.html)**\n", "internal_id": "pymongo-misconfiguration-insecure/9f767433efa03961547967ec8682c2f1", "severity": "info", "owasp_category": "a6-misconfiguration", "category": "Security Misconfiguration", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "Client-side Field Level Encryption allows an application to encrypt specific data fields based on the compliance needs.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/tools/fromWordlist.py", "DATA_TYPE": "OSS_SCAN", "lineNumber": 9, "ruleId": "pymongo-misconfiguration-insecure", "ruleName": "Security Misconfiguration", "contextText": "myclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n", "snippetText": "# ssh -L 27017:localhost:27017 user@remoteServer\nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\n\n\n"}, "tags": []}, {"app": "open-source-crawler", "type": "extscan", "title": "Detected tainted file handling: $_GET['search']\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\n$url\\ncall to file_get_contents.", "description": "Detected tainted file handling: $_GET[`search`]\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\n$url\\ncall to file_get_contents.\n\n## Additional information\n\n**[TaintedFile](https://psalm.dev/255)**", "internal_id": "255/9e987784821ffb3b918a4ce9f87c3af4", "severity": "critical", "owasp_category": "", "category": "TaintedFile", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "Detected tainted file handling: $_GET['search']\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\n$url\\ncall to file_get_contents.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/api.php", "DATA_TYPE": "OSS_SCAN", "lineNumber": 462, "ruleId": "255", "ruleName": "TaintedFile", "contextText": "\t\t$queryText = $_GET['search'];\n", "snippetText": "\tif(isset($_GET['search'])){\n\t\t$queryText = $_GET['search'];\n"}, "tags": []}, {"app": "open-source-crawler", "type": "extscan", "title": "Detected tainted file handling: $_GET['search']\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\nconcat\\n$url\\ncall to file_get_contents.", "description": "Detected tainted file handling: $_GET[`search`]\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\n$url\\ncall to file_get_contents.\n\n## Additional information\n\n**[TaintedFile](https://psalm.dev/255)**", "internal_id": "255/9e987784821ffb3b918a4ce9f87c3af4", "severity": "critical", "owasp_category": "", "category": "TaintedFile", "details": {"repoContext": {"gitProvider": "github", "ciProvider": "github", "repositoryName": "open-source-crawler", "repositoryUri": "https://github.com/spencerlepine/open-source-crawler", "revisionId": "735748ce709a4271f6944b183a2c0a8c2573b40f", "branch": "main", "invokedBy": "Tomas Vanagas <tomasvanagas@ymail.com>", "pullRequest": false, "botUser": false}, "name": "Detected tainted file handling: $_GET['search']\\n$queryText\\ncall to search\\nsearch#2\\n$data\\ncall to preg_split\\npreg_split#2\\narrayvalue-fetch\\n$line\\ncall to strtolower\\nstrtolower#1\\n$line\\n$_ids\\ncall to queryOutsource\\nqueryOutsource#2\\n$itemsArray\\narrayvalue-fetch\\n$item\\nconcat\\nconcat\\n$url\\ncall to file_get_contents.", "tags": "Scan", "fileName": "https://github.com/dehash-lt/api/api.php", "DATA_TYPE": "OSS_SCAN", "lineNumber": 462, "ruleId": "255", "ruleName": "TaintedFile", "contextText": "\t\t$queryText = $_GET['search'];\n", "snippetText": "\tif(isset($_GET['search'])){\n\t\t$queryText = $_GET['search'];\n"}, "tags": []}]}