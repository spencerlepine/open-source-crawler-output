{"id": "CVE-2021-44906", "package": "npm:minimist", "purl": "pkg:npm/minimist@1.2.5", "package_type": "npm", "package_usage": "N/A", "version": "1.2.5", "fix_version": "1.2.6", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Prototype Pollution in minimist\nMinimist <=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69 95).\nUpgrade to version 1.2.6 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23438", "package": "npm:mpath", "purl": "pkg:npm/mpath@0.8.3", "package_type": "npm", "package_usage": "N/A", "version": "0.8.3", "fix_version": "0.8.4", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Type confusion in mpath\nThis affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE 2018 16490. In particular, the condition ignoreProperties.indexOf(parts[i ) !==  1 returns  1 if parts[i  is ['__proto__' . This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.\nUpgrade to version 0.8.4 or later\n            ", "related_urls": []}
{"id": "CVE-2021-33502", "package": "npm:normalize-url", "purl": "pkg:npm/normalize-url@4.5.0", "package_type": "npm", "package_usage": "N/A", "version": "4.5.0", "fix_version": "4.5.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# ReDoS in normalize url\nThe normalize url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.\nUpgrade to version 4.5.1 or later\n            ", "related_urls": []}
{"id": "CVE-2022-33987", "package": "npm:got", "purl": "pkg:npm/got@9.6.0", "package_type": "npm", "package_usage": "N/A", "version": "9.6.0", "fix_version": "11.8.5", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Got allows a redirect to a UNIX socket\nThe got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.\nUpgrade to version 11.8.5 or later\n            ", "related_urls": []}
{"id": "CVE-2020-28469", "package": "npm:glob-parent", "purl": "pkg:npm/glob-parent@5.1.1", "package_type": "npm", "package_usage": "N/A", "version": "5.1.1", "fix_version": "5.1.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# glob parent before 5.1.2 vulnerable to Regular Expression Denial of Service in enclosure regex\nThis affects the package glob parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.\nUpgrade to version 5.1.2 or later\n            ", "related_urls": []}
{"id": "CVE-2021-3807", "package": "npm:ansi-regex", "purl": "pkg:npm/ansi-regex@5.0.0", "package_type": "npm", "package_usage": "N/A", "version": "5.0.0", "fix_version": "5.0.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Inefficient Regular Expression Complexity in chalk/ansi regex\nansi regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.\nUpgrade to version 5.0.1 or later\n            ", "related_urls": []}
{"id": "CVE-2022-3517", "package": "npm:minimatch", "purl": "pkg:npm/minimatch@3.0.4", "package_type": "npm", "package_usage": "N/A", "version": "3.0.4", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# minimatch ReDoS vulnerability\nA vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.\nUpgrade to version 3.0.5 or later\n            ", "related_urls": []}
{"id": "CVE-2022-24999", "package": "pkg:npm/qs@6.7.0", "purl": "pkg:npm/qs@6.7.0", "package_type": "npm", "package_usage": "N/A", "version": "6.7.0", "fix_version": "6.7.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).", "related_urls": ["https://github.com/n8tz/CVE-2022-24999", "https://github.com/expressjs/express/releases/tag/4.17.3", "https://github.com/ljharb/qs/pull/428"]}
