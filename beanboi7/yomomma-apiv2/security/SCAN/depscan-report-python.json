{"id": "CVE-2022-24735", "package": "pypi:redis", "package_type": "redis", "package_usage": "optional", "version": "<6.2.7", "fix_version": "6.2.7", "severity": "HIGH", "cvss_score": "7.8", "short_description": "Redis is an in-memory database that persists on disk. By exploiting weaknesses in the Lua script execution environment, an attacker with access to Redis prior to version 7.0.0 or 6.2.7 can inject Lua code that will execute with the (potentially higher) privileges of another Redis user. The Lua script execution environment in Redis provides some measures that prevent a script from creating side effects that persist and can affect the execution of the same, or different script, at a later time. Several weaknesses of these measures have been publicly known for a long time, but they had no security impact as the Redis security model did not endorse the concept of users or privileges. With the introduction of ACLs in Redis 6.0, these weaknesses can be exploited by a less privileged users to inject Lua code that will execute at a later time, when a privileged user executes a Lua script. The problem is fixed in Redis versions 7.0.0 and 6.2.7. An additional workaround to mitigate this problem without patching the redis-server executable, if Lua scripting is not being used, is to block access to `SCRIPT LOAD` and `EVAL` commands using ACL rules.", "related_urls": ["https://github.com/redis/redis/pull/10651", "https://github.com/redis/redis/security/advisories/GHSA-647m-2wmq-qmvq", "https://github.com/redis/redis/releases/tag/7.0.0", "https://github.com/redis/redis/releases/tag/6.2.7", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VPYKSG7LKUJGVM2P72EHXKVRVRWHLORX/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J4ZK3675DGHVVDOFLJN7WX6YYH27GPMK/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WSTPUCAPBRHIFPSCOURR4OYX4E2OISAF/", "https://security.netapp.com/advisory/ntap-20220715-0003/", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://security.gentoo.org/glsa/202209-17"]}
{"id": "CVE-2022-24736", "package": "pypi:redis", "package_type": "redis", "package_usage": "optional", "version": "<6.2.7", "fix_version": "6.2.7", "severity": "MEDIUM", "cvss_score": "5.5", "short_description": "Redis is an in-memory database that persists on disk. Prior to versions 6.2.7 and 7.0.0, an attacker attempting to load a specially crafted Lua script can cause NULL pointer dereference which will result with a crash of the redis-server process. The problem is fixed in Redis versions 7.0.0 and 6.2.7. An additional workaround to mitigate this problem without patching the redis-server executable, if Lua scripting is not being used, is to block access to `SCRIPT LOAD` and `EVAL` commands using ACL rules.", "related_urls": ["https://github.com/redis/redis/pull/10651", "https://github.com/redis/redis/security/advisories/GHSA-3qpw-7686-5984", "https://github.com/redis/redis/releases/tag/7.0.0", "https://github.com/redis/redis/releases/tag/6.2.7", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VPYKSG7LKUJGVM2P72EHXKVRVRWHLORX/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J4ZK3675DGHVVDOFLJN7WX6YYH27GPMK/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WSTPUCAPBRHIFPSCOURR4OYX4E2OISAF/", "https://security.netapp.com/advisory/ntap-20220715-0003/", "https://www.oracle.com/security-alerts/cpujul2022.html", "https://security.gentoo.org/glsa/202209-17"]}
{"id": "CVE-2021-29510", "package": "pypi:pydantic", "package_type": "pydantic_project", "package_usage": "optional", "version": ">=1.8-<1.8.2", "fix_version": "1.8.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "Pydantic is a data validation and settings management using Python type hinting. In affected versions passing either `'infinity'`, `'inf'` or `float('inf')` (or their negatives) to `datetime` or `date` fields causes validation to run forever with 100% CPU usage (on one CPU). Pydantic has been patched with fixes available in the following versions: v1.8.2, v1.7.4, v1.6.2. All these versions are available on pypi(https://pypi.org/project/pydantic/#history), and will be available on conda-forge(https://anaconda.org/conda-forge/pydantic) soon. See the changelog(https://pydantic-docs.helpmanual.io/) for details. If you absolutely can't upgrade, you can work around this risk using a validator(https://pydantic-docs.helpmanual.io/usage/validators/) to catch these values. This is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic. If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue at https://github.com/samuelcolvin/pydantic/issues requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.", "related_urls": ["https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh", "https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB/"]}
{"id": "CVE-2021-32626", "package": "pypi:redis", "package_type": "redis", "package_usage": "optional", "version": ">=2.6-<5.0.14", "fix_version": "6.2.7", "severity": "HIGH", "cvss_score": "8.8", "short_description": "Redis is an open source, in-memory database that persists on disk. In affected versions specially crafted Lua scripts executing in Redis can cause the heap-based Lua stack to be overflowed, due to incomplete checks for this condition. This can result with heap corruption and potentially remote code execution. This problem exists in all versions of Redis with Lua scripting support, starting from 2.6. The problem is fixed in versions 6.2.6, 6.0.16 and 5.0.14. For users unable to update an additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing Lua scripts. This can be done using ACL to restrict EVAL and EVALSHA commands.", "related_urls": ["https://github.com/redis/redis/commit/666ed7facf4524bf6d19b11b20faa2cf93fdf591", "https://github.com/redis/redis/security/advisories/GHSA-p486-xggp-782c", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VL5KXFN3ATM7IIM7Q4O4PWTSRGZ5744Z/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HTYQ5ZF37HNGTZWVNJD3VXP7I6MEEF42/", "https://lists.apache.org/thread.html/r75490c61c2cb7b6ae2c81238fd52ae13636c60435abcd732d41531a0@%3Ccommits.druid.apache.org%3E", "https://security.netapp.com/advisory/ntap-20211104-0003/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WR5WKJWXD4D6S3DJCZ56V74ESLTDQRAB/", "https://www.debian.org/security/2021/dsa-5001", "https://www.oracle.com/security-alerts/cpuapr2022.html", "https://security.gentoo.org/glsa/202209-17"]}
{"id": "CVE-2021-32672", "package": "pypi:redis", "package_type": "redis", "package_usage": "optional", "version": ">=3.2.0-<5.0.14", "fix_version": "6.2.7", "severity": "MEDIUM", "cvss_score": "4.3", "short_description": "Redis is an open source, in-memory database that persists on disk. When using the Redis Lua Debugger, users can send malformed requests that cause the debugger\u2019s protocol parser to read data beyond the actual buffer. This issue affects all versions of Redis with Lua debugging support (3.2 or newer). The problem is fixed in versions 6.2.6, 6.0.16 and 5.0.14.", "related_urls": ["https://github.com/redis/redis/security/advisories/GHSA-9mj9-xx53-qmxm", "https://github.com/redis/redis/commit/6ac3c0b7abd35f37201ed2d6298ecef4ea1ae1dd", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VL5KXFN3ATM7IIM7Q4O4PWTSRGZ5744Z/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HTYQ5ZF37HNGTZWVNJD3VXP7I6MEEF42/", "https://security.netapp.com/advisory/ntap-20211104-0003/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WR5WKJWXD4D6S3DJCZ56V74ESLTDQRAB/", "https://www.debian.org/security/2021/dsa-5001", "https://www.oracle.com/security-alerts/cpuapr2022.html", "https://security.gentoo.org/glsa/202209-17"]}
{"id": "CVE-2021-32677", "package": "pypi:fastapi", "package_type": "fastapi_project", "package_usage": "required", "version": "<0.65.2", "fix_version": "0.65.2", "severity": "HIGH", "cvss_score": "8.1", "short_description": "FastAPI is a web framework for building APIs with Python 3.6+ based on standard Python type hints. FastAPI versions lower than 0.65.2 that used cookies for authentication in path operations that received JSON payloads sent by browsers were vulnerable to a Cross-Site Request Forgery (CSRF) attack. In versions lower than 0.65.2, FastAPI would try to read the request payload as JSON even if the content-type header sent was not set to application/json or a compatible JSON media type (e.g. application/geo+json). A request with a content type of text/plain containing JSON data would be accepted and the JSON data would be extracted. Requests with content type text/plain are exempt from CORS preflights, for being considered Simple requests. The browser will execute them right away including cookies, and the text content could be a JSON string that would be parsed and accepted by the FastAPI application. This is fixed in FastAPI 0.65.2. The request data is now parsed as JSON only if the content-type header is application/json or another JSON compatible media type like application/geo+json. It's best to upgrade to the latest FastAPI, but if updating is not possible then a middleware or a dependency that checks the content-type header and aborts the request if it is not application/json or another JSON compatible content type can act as a mitigating workaround.", "related_urls": ["https://github.com/tiangolo/fastapi/commit/fa7e3c996edf2d5482fff8f9d890ac2390dede4d", "https://github.com/tiangolo/fastapi/security/advisories/GHSA-8h2j-cgx8-6xv7", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MATAWX25TYKNEKLDMKWNLYDB34UWTROA/"]}
{"id": "CVE-2021-33503", "package": "pypi:urllib3", "package_type": "python", "package_usage": "optional", "version": "<1.26.5", "fix_version": "1.26.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.", "related_urls": ["https://github.com/advisories/GHSA-q2q7-5pp4-w6pg", "https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMUGWEAUYGGHTPPXT6YBD53WYXQGVV73/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6SCV7ZNAHS3E6PBFLJGENCDRDRWRZZ6W/", "https://security.gentoo.org/glsa/202107-36", "https://www.oracle.com/security-alerts/cpuoct2021.html"]}
