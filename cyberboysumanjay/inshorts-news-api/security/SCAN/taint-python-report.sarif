{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Python Security Analysis",
          "rules": [
            {
              "id": "flask-misconfiguration-static",
              "help": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.",
                "markdown": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data."
              },
              "name": "Security Misconfiguration",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/732.html",
              "shortDescription": {
                "text": "Incorrect Permission Assignment for Critical Resource."
              }
            },
            {
              "id": "flask-misconfiguration-recommended",
              "help": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.",
                "markdown": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data."
              },
              "name": "Security Misconfiguration",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/732.html",
              "shortDescription": {
                "text": "Incorrect Permission Assignment for Critical Resource."
              }
            },
            {
              "id": "flask-misconfiguration-controls",
              "help": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.",
                "markdown": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\nWhen a resource is given a permissions setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data."
              },
              "name": "Missing Security Controls",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "high"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/732.html",
              "shortDescription": {
                "text": "Incorrect Permission Assignment for Critical Resource."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "Python Security Analysis"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-j",
            "-a",
            "e",
            "-o",
            "/github/workspace/reports/taint-python-report.json"
          ],
          "executionSuccessful": true,
          "commandLine": "-j -a e -o /github/workspace/reports/taint-python-report.json",
          "endTimeUtc": "2022-12-21T08:30:24Z",
          "workingDirectory": {
            "uri": "https://github.com/cyberboysumanjay/inshorts-news-api"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2022-12-21T08:30:24Z",
          "workingDirectory": {
            "uri": "https://github.com/cyberboysumanjay/inshorts-news-api"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 4,
          "critical": 0,
          "high": 0,
          "medium": 2,
          "low": 2
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "Security Misconfiguration with the config `secret_key` set to a static value `i_am****`."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.secret_key = \"i_am_not_feeling_sleepy_so_i_am_coding_this\"\n"
                  },
                  "startLine": 7
                },
                "artifactLocation": {
                  "uri": "https://github.com/cyberboysumanjay/inshorts-news-api/app.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "app = Flask(__name__)\napp.secret_key = \"i_am_not_feeling_sleepy_so_i_am_coding_this\"\nCORS(app)\n\n"
                  },
                  "endLine": 9,
                  "startLine": 6
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "f93866ce84a2b780",
            "scanFileHash": "4556e3f7b0848eeb"
          },
          "ruleId": "flask-misconfiguration-static",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Security Misconfiguration with the config `PREFERRED_URL_SCHEME` not set to the recommended value `https` for production use."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "https://github.com/cyberboysumanjay/inshorts-news-api/app.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\nfrom flask import Flask, request, jsonify\nfrom inshorts import getNews\nfrom flask_cors import CORS\n"
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "0fd738c546581dbc",
            "scanFileHash": "4556e3f7b0848eeb"
          },
          "ruleId": "flask-misconfiguration-recommended",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Security Misconfiguration with the config `SESSION_COOKIE_SECURE` not set to the recommended value `True` for production use."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "https://github.com/cyberboysumanjay/inshorts-news-api/app.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\nfrom flask import Flask, request, jsonify\nfrom inshorts import getNews\nfrom flask_cors import CORS\n"
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "0fd738c546581dbc",
            "scanFileHash": "4556e3f7b0848eeb"
          },
          "ruleId": "flask-misconfiguration-recommended",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Consider adding Flask-Security and Flask-Talisman security extensions to your Flask apps."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\n"
                  },
                  "startLine": 1
                },
                "artifactLocation": {
                  "uri": "https://github.com/cyberboysumanjay/inshorts-news-api/app.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "#Coded by Sumanjay on 29th Feb 2020\nfrom flask import Flask, request, jsonify\nfrom inshorts import getNews\nfrom flask_cors import CORS\n"
                  },
                  "endLine": 4,
                  "startLine": 1
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "0fd738c546581dbc",
            "scanFileHash": "4556e3f7b0848eeb"
          },
          "ruleId": "flask-misconfiguration-controls",
          "ruleIndex": 2
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "f06ac8b7-e3e0-47b8-92e0-439b2e032ab9"
      },
      "versionControlProvenance": [
        {
          "branch": "main",
          "repositoryUri": "https://github.com/spencerlepine/open-source-crawler",
          "revisionId": "e2c87acfdf97e22cdfc2109da8b3f7254afdb59b"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "f06ac8b7-e3e0-47b8-92e0-439b2e032ab9",
      "runGuid": "6b1a85f2-4d20-4118-ba56-f6d4f1859c42"
    }
  ]
}