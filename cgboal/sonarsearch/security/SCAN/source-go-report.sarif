{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Go Security Audit",
          "rules": [
            {
              "id": "CWE-295",
              "help": {
                "text": "The software does not validate, or incorrectly validates, a certificate.\nWhen a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The software might connect to a malicious host while believing it is a trusted host, or the software might be deceived into accepting spoofed data that appears to originate from a trusted host.",
                "markdown": "The software does not validate, or incorrectly validates, a certificate.\nWhen a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The software might connect to a malicious host while believing it is a trusted host, or the software might be deceived into accepting spoofed data that appears to originate from a trusted host."
              },
              "name": "",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The software does not validate, or incorrectly validates, a certificate."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/295.html",
              "shortDescription": {
                "text": "Improper Certificate Validation."
              }
            },
            {
              "id": "CWE-22",
              "help": {
                "text": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\nMany file operations are intended to take place within a restricted directory. By using special elements such as .. and / separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the ../ sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute pathnames such as /usr/local/bin, which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add .txt to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.",
                "markdown": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\nMany file operations are intended to take place within a restricted directory. By using special elements such as .. and / separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the ../ sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute pathnames such as /usr/local/bin, which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add .txt to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction."
              },
              "name": "",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/22.html",
              "shortDescription": {
                "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')."
              }
            },
            {
              "id": "CWE-703",
              "help": {
                "text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software.",
                "markdown": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
              },
              "name": "",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/703.html",
              "shortDescription": {
                "text": "Improper Check or Handling of Exceptional Conditions."
              }
            },
            {
              "id": "CWE-200",
              "help": {
                "text": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.\nThere are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources that are made accessible to unauthorized actors a different weakness or mistake inadvertently makes the sensitive information available, such as a web script error revealing the full system path of the program.",
                "markdown": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.\nThere are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include: private, personal information, such as personal messages, financial data, health records, geographic location, or contact details system status and environment, such as the operating system and installed packages business secrets and intellectual property network status and configuration the product's own code or internal state metadata, e.g. logging of connections or message headers indirect information, such as a discrepancy between two internal operations that can be observed by an outsider Information might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include: the product's own users people or organizations whose information is created or used by the product, even if they are not direct product users the product's administrators, including the admins of the system(s) and/or networks on which the product operates the developer Information exposures can occur in different ways: the code explicitly inserts sensitive information into resources that are made accessible to unauthorized actors a different weakness or mistake inadvertently makes the sensitive information available, such as a web script error revealing the full system path of the program."
              },
              "name": "",
              "properties": {
                "tags": [
                  "Scan"
                ],
                "precision": "very-high"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."
              },
              "helpUri": "https://cwe.mitre.org/data/definitions/200.html",
              "shortDescription": {
                "text": "Exposure of Sensitive Information to an Unauthorized Actor."
              }
            }
          ],
          "version": "1.0.0-scan",
          "fullName": "Go Security Audit"
        }
      },
      "conversion": {
        "tool": {
          "driver": {
            "name": "@ShiftLeft/sast-scan"
          }
        },
        "invocation": {
          "arguments": [
            "-fmt=json",
            "-confidence=medium",
            "-severity=medium",
            "-no-fail",
            "-out=/github/workspace/reports/source-go-report.json",
            "./..."
          ],
          "executionSuccessful": true,
          "commandLine": "-fmt=json -confidence=medium -severity=medium -no-fail -out=/github/workspace/reports/source-go-report.json ./...",
          "endTimeUtc": "2022-11-07T08:39:53Z",
          "workingDirectory": {
            "uri": "https://github.com/cgboal/sonarsearch"
          }
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2022-11-07T08:39:53Z",
          "workingDirectory": {
            "uri": "https://github.com/cgboal/sonarsearch"
          }
        }
      ],
      "properties": {
        "metrics": {
          "total": 7,
          "critical": 0,
          "high": 1,
          "medium": 6,
          "low": 0
        }
      },
      "results": [
        {
          "message": {
            "markdown": "",
            "text": "TLS MinVersion too low."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tconfig := &tls.Config{}\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/crobat/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func NewCrobatClient() CrobatClient {\n\tconfig := &tls.Config{}\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "HIGH",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "15dd15b24e1b97d1",
            "scanFileHash": "a0f2267aa6f3661c"
          },
          "ruleId": "CWE-295",
          "ruleIndex": 0
        },
        {
          "message": {
            "markdown": "",
            "text": "Potential file inclusion via variable."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tinputFile, err := os.Open(fileName)\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/pkg/search/domains.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func getScanner(fileName string, pos int64) (*bufio.Scanner, *os.File, error) {\n\tinputFile, err := os.Open(fileName)\n"
                  },
                  "endLine": 190,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "b6d538feeb0eeeca",
            "scanFileHash": "7ceabf61cb36c091"
          },
          "ruleId": "CWE-22",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Potential file inclusion via variable."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\toutputFile, err := os.Create(outputFileName)\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/sonar2crobat/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func Reducer(outputFileName string, lines <-chan string) {\n\toutputFile, err := os.Create(outputFileName)\n"
                  },
                  "endLine": 73,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "40c7004a3ccbf3e0",
            "scanFileHash": "7d3dd059c927ca1e"
          },
          "ruleId": "CWE-22",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Potential file inclusion via variable."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tinputFile, err := os.Open(fileName)\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/crobat2index/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "func getReader(fileName string) (*bufio.Reader, error) {\n\tinputFile, err := os.Open(fileName)\n"
                  },
                  "endLine": 18,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "b6d538feeb0eeeca",
            "scanFileHash": "a47f0c56838a8d1a"
          },
          "ruleId": "CWE-22",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Potential file inclusion via variable."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tfile, _ := os.Open(fileName)\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/crobat/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\tif _, err := os.Stat(fileName); err == nil {\n\t\tfile, _ := os.Open(fileName)\n"
                  },
                  "endLine": 43,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "cc959c6ccefcef60",
            "scanFileHash": "a0f2267aa6f3661c"
          },
          "ruleId": "CWE-22",
          "ruleIndex": 1
        },
        {
          "message": {
            "markdown": "",
            "text": "Deferring unsafe method \"Close\" on type \"*os.File\"."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\t\tdefer file.Close()\n"
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/crobat/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\t\tfile, _ := os.Open(fileName)\n\t\tdefer file.Close()\n"
                  },
                  "endLine": 44,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "9c74cef9da941996",
            "scanFileHash": "a0f2267aa6f3661c"
          },
          "ruleId": "CWE-703",
          "ruleIndex": 2
        },
        {
          "message": {
            "markdown": "",
            "text": "Binds to all network interfaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "\tlis, err := net.Listen(\"tcp\", \":1997\")\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "https://github.com/cgboal/sonarsearch/cmd/crobat-server/main.go"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n\tlis, err := net.Listen(\"tcp\", \":1997\")\n"
                  },
                  "endLine": 24,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "MEDIUM",
            "issue_tags": {}
          },
          "baselineState": "new",
          "partialFingerprints": {
            "scanPrimaryLocationHash": "c5b082d9df1a4333",
            "scanFileHash": "bb63dc7883b0931c"
          },
          "ruleId": "CWE-200",
          "ruleIndex": 3
        }
      ],
      "automationDetails": {
        "description": {
          "text": "Static Analysis Security Test results using @ShiftLeft/sast-scan"
        },
        "guid": "a36a81bb-1569-4494-887d-5e399ccc22a4"
      },
      "versionControlProvenance": [
        {
          "branch": "main",
          "repositoryUri": "https://github.com/spencerlepine/open-source-crawler",
          "revisionId": "867b6e17a329c00f6ee42fd986df8831206ddae6"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "inlineExternalProperties": [
    {
      "guid": "a36a81bb-1569-4494-887d-5e399ccc22a4",
      "runGuid": "a6ec32dc-e859-49c5-b354-5b92f097dd49"
    }
  ]
}