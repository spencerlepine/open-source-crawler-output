{"id": "CVE-2020-28282", "package": "npm:getobject", "package_type": "npm", "package_usage": "optional", "version": "<1.0.0", "fix_version": "1.0.0", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Prototype pollution vulnerability in 'getobject'\nPrototype pollution vulnerability in 'getobject' version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.\nUpgrade to version 1.0.0 or later\n            ", "related_urls": []}
{"id": "CVE-2017-1000048", "package": "npm:qs", "package_type": "npm", "package_usage": "optional", "version": "<6.0.4", "fix_version": "6.0.4", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution Protection Bypass in qs\nAffected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or ` ` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.\n\n\n## Recommendation\n\nUpgrade to 6.0.4, 6.1.2, 6.2.3, 6.3.2 or later.\nUpgrade to version 6.0.4 or later\n            ", "related_urls": []}
{"id": "CVE-2019-10744", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.12", "fix_version": "4.17.12", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.\nUpgrade to version 4.17.12 or later\n            ", "related_urls": []}
{"id": "NPM-1069565", "package": "npm:underscore.string", "package_type": "npm", "package_usage": "optional", "version": "<3.3.5", "fix_version": "3.3.5", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service in underscore.string\nVersions of `underscore.string` prior to *3.3.5* are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nThe function `unescapeHTML` is vulnerable to ReDoS due to an overly broad regex. The slowdown is approximately 2s for 50,000 characters but grows exponentially with larger inputs.\n\n\n## Recommendation\n\nUpgrade to version 3.3.5 or higher.\nUpgrade to version 3.3.5 or later\n            ", "related_urls": []}
{"id": "NPM-1069598", "package": "npm:js-yaml", "package_type": "npm", "package_usage": "optional", "version": "<3.13.0", "fix_version": "3.13.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Denial of Service in js yaml\nVersions of `js yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.\nUpgrade to version 3.13.0 or later\n            ", "related_urls": []}
{"id": "NPM-1069604", "package": "npm:js-yaml", "package_type": "npm", "package_usage": "optional", "version": "<3.13.1", "fix_version": "3.13.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Code Injection in js yaml\nVersions of `js yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n  \"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.\nUpgrade to version 3.13.1 or later\n            ", "related_urls": []}
{"id": "CVE-2014-7191", "package": "npm:qs", "package_type": "npm", "package_usage": "optional", "version": "<1.0.0", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial of Service Memory Exhaustion in qs\nVersions prior to 1.0 of `qs` are affected by a denial of service condition. This condition is triggered by parsing a crafted string that deserializes into very large sparse arrays, resulting in the process running out of memory and eventually crashing.\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.\nUpgrade to version 1.0.0 or later\n            ", "related_urls": []}
{"id": "CVE-2015-8855", "package": "npm:semver", "package_type": "npm", "package_usage": "optional", "version": "<4.3.2", "fix_version": "4.3.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in semver\nVersions 4.3.1 and earlier of `semver` are affected by a regular expression denial of service vulnerability when extremely long version strings are parsed.\n\n\n\n## Recommendation\n\nUpdate to version 4.3.2 or later\nUpgrade to version 4.3.2 or later\n            ", "related_urls": []}
{"id": "CVE-2015-8858", "package": "npm:uglify-js", "package_type": "npm", "package_usage": "optional", "version": "<2.6.0", "fix_version": "2.6.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in uglify js\nVersions of `uglify js` prior to 2.6.0 are affected by a regular expression denial of service vulnerability when malicious inputs are passed into the `parse()` method.\n\n\n### Proof of Concept\n\n```\nvar u = require('uglify js');\nvar genstr = function (len, chr) {\n    var result = \"\";\n    for (i=0; i<=len; i++) {\n        result = result + chr;\n    }\n\n    return result;\n}\n\nu.parse(\"var a = \" + genstr(process.argv[2 , \"1\") + \".1ee7;\");\n```\n\n### Results\n```\n$ time node test.js 10000\nreal\t0m1.091s\nuser\t0m1.047s\nsys\t0m0.039s\n\n$ time node test.js 80000\nreal\t0m6.486s\nuser\t0m6.229s\nsys\t0m0.094s\n```\n\n\n## Recommendation\n\nUpdate to version 2.6.0 or later.\nUpgrade to version 2.6.0 or later\n            ", "related_urls": []}
{"id": "CVE-2019-1010266", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.11", "fix_version": "4.17.11", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nlodash prior to 4.7.11 is affected by: CWE 400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.\nUpgrade to version 4.17.11 or later\n            ", "related_urls": []}
{"id": "CVE-2020-8203", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.20", "fix_version": "4.17.20", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in lodash\nVersions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user supplied. Being affected by this issue requires zipping objects based on user provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.\nUpgrade to version 4.17.20 or later\n            ", "related_urls": []}
{"id": "CVE-2022-0436", "package": "npm:grunt", "package_type": "npm", "package_usage": "optional", "version": "<1.5.2", "fix_version": "1.5.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Path Traversal in Grunt\nGrunt prior to version 1.5.2 is vulnerable to path traversal.\nUpgrade to version 1.5.2 or later\n            ", "related_urls": []}
{"id": "CVE-2022-1537", "package": "npm:grunt", "package_type": "npm", "package_usage": "optional", "version": "<1.5.3", "fix_version": "1.5.3", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Race Condition in Grunt\nfile.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower privileged user has write access to both source and destination directories as the lower privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.\nUpgrade to version 1.5.3 or later\n            ", "related_urls": []}
{"id": "CVE-2020-7729", "package": "npm:grunt", "package_type": "npm", "package_usage": "optional", "version": "<1.3.0", "fix_version": "1.3.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Arbitrary Code Execution in grunt\nThe package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js yaml inside grunt.file.readYAML.\nUpgrade to version 1.3.0 or later\n            ", "related_urls": []}
{"id": "CVE-2018-16487", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.11", "fix_version": "4.17.11", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.5 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.11 or later.\nUpgrade to version 4.17.11 or later\n            ", "related_urls": []}
{"id": "CVE-2018-3721", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.5", "fix_version": "4.17.5", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Prototype Pollution in lodash\nVersions of `lodash` before 4.17.5 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.5 or later.\nUpgrade to version 4.17.5 or later\n            ", "related_urls": []}
{"id": "CVE-2014-10064", "package": "npm:qs", "package_type": "npm", "package_usage": "optional", "version": "<1.0.0", "fix_version": "1.0.0", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Denial of Service Extended Event Loop Blocking in qs\nVersions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.\n\n\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later\nUpgrade to version 1.0.0 or later\n            ", "related_urls": []}
{"id": "CVE-2016-10540", "package": "npm:minimatch", "package_type": "npm", "package_usage": "optional", "version": "<3.0.2", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Regular Expression Denial of Service in minimatch\nAffected versions of `minimatch` are vulnerable to regular expression denial of service attacks when user input is passed into the `pattern` argument of `minimatch(path, pattern)`.\n\n\n## Proof of Concept\n```\nvar minimatch = require(\u201cminimatch\u201d);\n\n// utility function for generating long strings\nvar genstr = function (len, chr) {\n  var result = \u201c\u201d;\n  for (i=0; i<=len; i++) {\n    result = result + chr;\n  }\n  return result;\n}\n\nvar exploit = \u201c[!\u201d + genstr(1000000, \u201c  \u201d) + \u201cA\u201d;\n\n// minimatch exploit.\nconsole.log(\u201cstarting minimatch\u201d);\nminimatch(\u201cfoo\u201d, exploit);\nconsole.log(\u201cfinishing minimatch\u201d);\n```\n\n\n## Recommendation\n\nUpdate to version 3.0.2 or later.\nUpgrade to version 3.0.2 or later\n            ", "related_urls": []}
{"id": "CVE-2017-16137", "package": "npm:debug", "package_type": "npm", "package_usage": "optional", "version": "<2.6.9", "fix_version": "2.6.9", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Regular Expression Denial of Service in debug\nAffected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. \n\nAs it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.\n\n\n## Recommendation\n\nVersion 2.x.x: Update to version 2.6.9 or later.\nVersion 3.x.x: Update to version 3.1.0 or later.\nUpgrade to version 2.6.9 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23337", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.21", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2020-28500", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.21", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now()   time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now()   time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now()   time2; console.log(\"time_cost2: \" + time_cost2)\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23358", "package": "npm:underscore", "package_type": "npm", "package_usage": "required", "version": ">=1.3.2-<1.12.1", "fix_version": "1.12.1", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Arbitrary Code Execution in underscore\nThe package `underscore` from 1.13.0 0 and before 1.13.0 2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.\nUpgrade to version 1.12.1 or later\n            ", "related_urls": []}
{"id": "CVE-2022-3517", "package": "npm:minimatch", "package_type": "npm", "package_usage": "optional", "version": "<3.0.5", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# minimatch ReDoS vulnerability\nA vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.\nUpgrade to version 3.0.5 or later\n            ", "related_urls": []}
{"id": "CVE-2021-43138", "package": "npm:async", "package_type": "async_project", "package_usage": "required", "version": "<2.6.4", "fix_version": "2.6.4", "severity": "HIGH", "cvss_score": "7.8", "short_description": "In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.", "related_urls": ["https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js", "https://jsfiddle.net/oz5twjd9/", "https://github.com/caolan/async/blob/master/lib/internal/iterator.js", "https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d", "https://github.com/caolan/async/pull/1828", "https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264", "https://github.com/caolan/async/compare/v2.6.3...v2.6.4"]}
{"id": "CVE-2020-15133", "package": "npm:faye-websocket", "package_type": "faye-websocket_project", "package_usage": "optional", "version": "<0.11.0", "fix_version": "0.11.0", "severity": "HIGH", "cvss_score": "8.7", "short_description": "In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.", "related_urls": ["https://blog.jcoglan.com/2020/07/31/missing-tls-verification-in-faye/", "https://github.com/faye/faye-websocket-ruby/security/advisories/GHSA-2v5c-755p-p4gv"]}
