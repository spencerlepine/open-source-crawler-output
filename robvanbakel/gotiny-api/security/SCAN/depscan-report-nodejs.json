{"id": "CVE-2022-38900", "package": "npm:decode-uri-component", "purl": "pkg:npm/decode-uri-component@0.2.0", "package_type": "npm", "package_usage": "N/A", "version": "0.2.0", "fix_version": "0.2.1", "severity": "LOW", "cvss_score": "2.0", "short_description": "# decode uri component vulnerable to Denial of Service (DoS)\ndecode uri component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.\nUpgrade to version 0.2.1 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23566", "package": "npm:nanoid", "purl": "pkg:npm/nanoid@3.1.12", "package_type": "npm", "package_usage": "N/A", "version": "3.1.12", "fix_version": "3.1.31", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Exposure of Sensitive Information to an Unauthorized Actor in nanoid\nThe package nanoid from 3.0.0, before 3.1.31, are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.\nUpgrade to version 3.1.31 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23337", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.20", "package_type": "npm", "package_usage": "N/A", "version": "4.17.20", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2020-28500", "package": "npm:lodash", "purl": "pkg:npm/lodash@4.17.20", "package_type": "npm", "package_usage": "N/A", "version": "4.17.20", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now()   time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now()   time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now()   time2; console.log(\"time_cost2: \" + time_cost2)\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2022-46175", "package": "npm:json5", "purl": "pkg:npm/json5@1.0.1", "package_type": "npm", "package_usage": "N/A", "version": "1.0.1", "fix_version": "1.0.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in JSON5 via Parse Method\nThe `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) >  1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod' )) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod' )) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod' )) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```\nUpgrade to version 1.0.2 or later\n            ", "related_urls": []}
{"id": "CVE-2022-3517", "package": "pkg:npm/minimatch@3.1.2", "purl": "pkg:npm/minimatch@3.1.2", "package_type": "npm", "package_usage": "N/A", "version": "3.1.2", "fix_version": "3.0.5", "severity": "HIGH", "cvss_score": "7.5", "short_description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.", "related_urls": ["https://github.com/grafana/grafana-image-renderer/issues/329", "https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6", "https://lists.debian.org/debian-lts-announce/2023/01/msg00011.html", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/", "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/"]}
{"id": "CVE-2021-23343", "package": "pkg:npm/path-parse@1.0.7", "purl": "pkg:npm/path-parse@1.0.7", "package_type": "npm", "package_usage": "N/A", "version": "1.0.7", "fix_version": "1.0.7", "severity": "HIGH", "cvss_score": "7.5", "short_description": "All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.", "related_urls": ["https://github.com/jbgutierrez/path-parse/issues/8", "https://snyk.io/vuln/SNYK-JS-PATHPARSE-1077067", "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1279028", "https://lists.apache.org/thread.html/r6a32cb3eda3b19096ad48ef1e7aa8f26e005f2f63765abb69ce08b85@%3Cdev.myfaces.apache.org%3E"]}
{"id": "CVE-2021-3807", "package": "pkg:npm/ansi-regex@5.0.1", "purl": "pkg:npm/ansi-regex@5.0.1", "package_type": "npm", "package_usage": "N/A", "version": "5.0.1", "fix_version": "4.1.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity", "related_urls": ["https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9", "https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994", "https://www.oracle.com/security-alerts/cpuapr2022.html", "https://security.netapp.com/advisory/ntap-20221014-0002/"]}
{"id": "CVE-2018-1109", "package": "pkg:npm/braces@3.0.2", "purl": "pkg:npm/braces@3.0.2", "package_type": "npm", "package_usage": "N/A", "version": "3.0.2", "fix_version": "2.3.1", "severity": "MEDIUM", "cvss_score": "5.3", "short_description": "A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.", "related_urls": ["https://snyk.io/vuln/npm:braces:20180219", "https://bugzilla.redhat.com/show_bug.cgi?id=1547272"]}
